2
00:00:04,000 --> 00:00:08,630
In this lecture, I'm going to show you 
how to handle exceptions in your programs. 
So 

3
00:00:08,630 --> 00:00:12,200
continuing with the code from the last lecture, 
to handle the Value

4
00:00:12,200 --> 00:00:15,550
Error exception here, 
we need to put this statement in

5
00:00:15,550 --> 00:00:19,560
a try block. 
So we add try colon,

6
00:00:20,140 --> 00:00:23,900
we indented and 
then after try we need to add an

7
00:00:23,900 --> 00:00:27,000
except clause. 
What is the type of the

8
00:00:27,000 --> 00:00:30,500
exception that we get, if 
the user enters a non numeric 

9
00:00:30,500 --> 00:00:33,840
value? 
That's a ValueError exception. You

10
00:00:33,840 --> 00:00:37,070
saw that in the last lecture. right? 
So we add

11
00:00:37,070 --> 00:00:41,080
the except clause and 
then we'll print a

12
00:00:41,080 --> 00:00:44,660
friendly error message like 
you didn't enter a

13
00:00:44,660 --> 00:00:48,650
valid age. 
So this is how this works: 
When 

14
00:00:48,650 --> 00:00:52,080
Python sees a try block
 it will execute every

15
00:00:52,080 --> 00:00:55,680
statement in this block.
 If any of these statements throws

16
00:00:55,680 --> 00:00:59,280
an exception, the code in the except clause

17
00:00:59,280 --> 00:01:02,990
will be executed. 
If we don't have any exceptions this

18
00:01:02,990 --> 00:01:06,900
code will not be executed. 
Let me show you. 
So save 

19
00:01:06,900 --> 00:01:10,070
the changes. 
back in the terminal. 
Let's run

20
00:01:10,070 --> 00:01:14,030
the program. 
I'm going to enter a valid age. 
So

21
00:01:14,030 --> 00:01:17,660
our program completed successfully.
 No error messages, beautiful.

22
00:01:18,140 --> 00:01:22,120
I'm going to run the program one more time.
 This time I'm going to enter a

23
00:01:22,120 --> 00:01:25,360
for the age.
 So we got a friendly error

24
00:01:25,360 --> 00:01:28,670
message and our application didn't crash. 
This

25
00:01:28,670 --> 00:01:32,250
is the important thing about handling exceptions.
 If you don't handle

26
00:01:32,250 --> 00:01:35,800
exceptions properly, your program will crash. 
So in

27
00:01:35,810 --> 00:01:39,330
other words if you add another statement here,

28
00:01:39,330 --> 00:01:44,250
let's print execution continues. 
In 

29
00:01:44,250 --> 00:01:48,050
this example because we are handling this exception properly, 
this

30
00:01:48,050 --> 00:01:51,500
statement will be executed.
Let me show you. 
So back

31
00:01:51,500 --> 00:01:55,350
in the terminal. 
let's run the program one more time. 
Enter a.

32
00:01:55,740 --> 00:01:58,940
We got our friendly our message and 
also you can 

33
00:01:58,940 --> 00:02:02,850
see the execution of our program continue. 
In contrast,

34
00:02:02,860 --> 00:02:06,410
in the last lecture where
 we didn't have the try block If

35
00:02:06,410 --> 00:02:09,970
we put this print statement 
after getting users age,

36
00:02:09,980 --> 00:02:13,460
this line would not be executed. 
Okay. 
We

37
00:02:13,460 --> 00:02:17,270
also have an optional else clause here. 
So

38
00:02:17,280 --> 00:02:20,960
else colon and 
what we put inside this

39
00:02:20,960 --> 00:02:25,770
block will be executed if
 no exception is thrown in

40
00:02:25,770 --> 00:02:29,340
the code that we add in the try block. 
So let's print a

41
00:02:29,340 --> 00:02:33,460
message like No exceptions were thrown.

42
00:02:34,140 --> 00:02:37,420
Save the changes. 
Back in the terminal.
Let's run this one

43
00:02:37,420 --> 00:02:41,160
more time. 
I enter a valid age. 
You

44
00:02:41,160 --> 00:02:44,680
can see this message:
No exceptions were thrown. 
So

45
00:02:44,680 --> 00:02:47,930
what we have in the else clause 
will only be executed if

46
00:02:47,930 --> 00:02:51,280
we don't have any exceptions.
 This is very similar to

47
00:02:51,280 --> 00:02:54,790
our for else loops. 
Remember for else? 
Earlier,

48
00:02:54,790 --> 00:02:58,550
when I talked about for else loops,
 I told you that the else clause

49
00:02:58,560 --> 00:03:02,280
is executed if we don't
 break out of the for loop.

50
00:03:02,290 --> 00:03:05,630
In other words,
 if the for loop completes, 
 then the

51
00:03:05,640 --> 00:03:09,140
else clause is executed.
 So here's the basic structure for

52
00:03:09,140 --> 00:03:12,650
handling exceptions. 
Now one more thing before we finish this lecture.

53
00:03:13,340 --> 00:03:17,290
Here when handling the exception
 we can optionally define

54
00:03:17,290 --> 00:03:20,860
a variable that will include
 the details about the exception, mostly

55
00:03:20,860 --> 00:03:24,720
the error message and sometimes additional arguments. 
So

56
00:03:24,720 --> 00:03:28,420
here we add as
 and then defining variable like

57
00:03:28,430 --> 00:03:32,010
error or ex for exception. 
So after

58
00:03:32,010 --> 00:03:35,960
this error message, let's just print ex. 
I'm

59
00:03:35,970 --> 00:03:40,860
also going to print type of ex. 
Now

60
00:03:40,860 --> 00:03:45,090
let's run the program one more time.
Enter a. 
So

61
00:03:45,090 --> 00:03:48,680
here's our friendly our message.
 Below that, we have the

62
00:03:48,680 --> 00:03:52,690
actual error message that isincluded in the exception. 
invalid

63
00:03:52,690 --> 00:03:56,020
literal for int() with base 10.
 Now this is

64
00:03:56,020 --> 00:03:59,310
very technical to show it to an end user,
 so we're not going to print it

65
00:03:59,310 --> 00:04:02,930
on the terminal,
this is just for demonstration. 
And below

66
00:04:02,930 --> 00:04:06,750
that you can see the type of this exception, 
it's an object of type ValueError.


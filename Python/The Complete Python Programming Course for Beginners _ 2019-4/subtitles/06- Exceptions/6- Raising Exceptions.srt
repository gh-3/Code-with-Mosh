2
00:00:04,000 --> 00:00:08,320
So far you have learned how to handle exceptions.
 but you can also raise

3
00:00:08,330 --> 00:00:12,450
or throw exceptions in your own code.
Let me show you an example. 
So

4
00:00:12,450 --> 00:00:16,310
I'm going to define a function.
 Let's call it calculate X

5
00:00:16,320 --> 00:00:20,070
factor. This function takes age and

6
00:00:20,110 --> 00:00:24,050
simply returns 10 divided by age. In

7
00:00:24,050 --> 00:00:28,040
this example. age cannot
 be zero or less. so

8
00:00:28,270 --> 00:00:31,930
we can have an if statement here.
 If age is

9
00:00:31,930 --> 00:00:36,260
less than or equal to zero.
 we can raise an exception. So

10
00:00:36,260 --> 00:00:39,440
we use the race statement and
 then specify the type of our

11
00:00:39,440 --> 00:00:43,000
exception. So far. you have
 seen a few types like value

12
00:00:43,000 --> 00:00:46,240
error. zero division error and so on. In

13
00:00:46,240 --> 00:00:49,740
Python we have various kinds
 of built in exceptions. If

14
00:00:49,740 --> 00:00:54,250
you go to Google and search
 for python 3 built-in exceptions

15
00:00:56,240 --> 00:00:59,400
on this page. we can see

16
00:00:59,400 --> 00:01:03,470
all the built in exceptions in python and 
what they're used for. Down

17
00:01:03,470 --> 00:01:06,610
the bottom of this page you can see the

18
00:01:06,610 --> 00:01:09,800
completely service exceptions.
 So as you can see here,

19
00:01:09,800 --> 00:01:14,180
we have a hierarchy like
 a parent child kind of relationship. 
 At

20
00:01:14,180 --> 00:01:17,560
the very top.
 We have based exception below that

21
00:01:17,560 --> 00:01:21,370
we have a few Children.
 One of them is exception. Below

22
00:01:21,370 --> 00:01:24,860
exception. we have arithmetic error.
 and below that we have

23
00:01:24,870 --> 00:01:28,410
zero division error. 
So these are the built in exceptions in

24
00:01:28,410 --> 00:01:31,940
python and 
they're sufficient for most cases. But

25
00:01:31,940 --> 00:01:35,290
you can also define your own exception types.
 It's not something that

26
00:01:35,290 --> 00:01:39,070
you do that often, but 
it is something that you can do for sure. 
In

27
00:01:39,070 --> 00:01:42,290
order to do that you have to learn about classes
 and that's the topic for the

28
00:01:42,290 --> 00:01:45,510
next section. 
back to our code. 
In this

29
00:01:45,510 --> 00:01:49,220
case we want to raise a 
ValueError exception. 
In

30
00:01:49,220 --> 00:01:52,530
parenthesis we can specify an error message like

31
00:01:52,540 --> 00:01:56,060
Age cannot be 0 or less.

32
00:01:57,340 --> 00:02:01,020
So we have this function that 
raises or throws an exception, if

33
00:02:01,020 --> 00:02:04,270
we give it an invalid argument. 
somewhere else in

34
00:02:04,270 --> 00:02:08,350
our program, 
we're going to use this function. 
So recall

35
00:02:08,360 --> 00:02:11,750
calculate_xfactor and pass, let's

36
00:02:11,750 --> 00:02:16,410
say negative one. 
Now let me run this program. You

37
00:02:16,410 --> 00:02:19,970
can see our program crashed
 with a value error exception. And

38
00:02:19,970 --> 00:02:24,020
here's the message. Age cannot
 be zero or less. 
 Obviously

39
00:02:24,020 --> 00:02:27,730
this happened because 
we didn't handle exceptions here properly, so

40
00:02:27,730 --> 00:02:32,280
we didn't have a try block.
To fix this issue let's add a

41
00:02:32,280 --> 00:02:36,670
try block and then. except clause of

42
00:02:36,670 --> 00:02:40,440
type value error. Let's give this exception object

43
00:02:40,440 --> 00:02:43,660
a name like error. and here

44
00:02:43,660 --> 00:02:47,030
we can simply print Sarah. Now let's

45
00:02:47,030 --> 00:02:50,320
run the program one more time.
 So here's our

46
00:02:50,320 --> 00:02:54,860
error message and our
 program didn't crash beautiful. So

47
00:02:54,860 --> 00:02:57,960
this is how you can raise exceptions in your cook. 
But this is

48
00:02:57,960 --> 00:03:01,520
not something that I advise you to do.
 I only explained it here because

49
00:03:01,520 --> 00:03:04,750
you will see this in other people's code.
 as I will show

50
00:03:04,750 --> 00:03:08,570
in the next lecture,
 raising exceptions is costly. 
 So

51
00:03:08,570 --> 00:03:11,940
in this example instead of
 raising an exception here and

52
00:03:11,940 --> 00:03:15,630
then handling it below this function,
 you could take a different approach that

53
00:03:15,630 --> 00:03:18,800
would result in better performance.
 That's what I'm going to show you in the next lecture.


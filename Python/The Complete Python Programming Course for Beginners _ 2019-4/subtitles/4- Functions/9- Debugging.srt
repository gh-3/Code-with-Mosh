2
00:00:04,000 --> 00:00:07,920
In this lecture I'm going to show
 you how to find and fix bugs in

3
00:00:07,920 --> 00:00:11,550
your programs. So here's the
 multiply function we wrote earlier

4
00:00:12,140 --> 00:00:15,760
. Let's add a couple
 of statements after this function

5
00:00:16,140 --> 00:00:19,540
. So print start. and

6
00:00:19,540 --> 00:00:23,050
then we'll call the multiply function. Give

7
00:00:23,050 --> 00:00:26,550
it three arguments 12 and three. So the

8
00:00:26,550 --> 00:00:29,720
result should be six.
 And here we print the

9
00:00:29,720 --> 00:00:32,820
result on the terminal. Now. to create a

10
00:00:32,820 --> 00:00:36,140
bug in this program.
 I'm going to deliberately. intended

11
00:00:36,140 --> 00:00:39,550
this return statement.
 So now when we run this

12
00:00:39,550 --> 00:00:43,860
program instead of six, we get one. So

13
00:00:43,860 --> 00:00:47,430
we're going to use a
 technique called debugging to find and

14
00:00:47,430 --> 00:00:50,930
fix this bug. All right.
 First. we need to open the

15
00:00:50,930 --> 00:00:54,210
debugging panel. The first time

16
00:00:54,210 --> 00:00:57,340
you want to use debugging in
 the Python project you need to

17
00:00:57,340 --> 00:01:00,690
click this icon. This will generate a new

18
00:01:00,690 --> 00:01:04,020
file called launch.json. In this file

19
00:01:04,020 --> 00:01:07,340
we have a bunch of debugging configuration.
 you never have to touch any

20
00:01:07,340 --> 00:01:10,730
of this. so don't worry about it.
 Close it. You

21
00:01:10,730 --> 00:01:14,280
can see this file is
 placed inside of this VSCode

22
00:01:14,280 --> 00:01:18,220
folder. It's right here. launch.json. Now

23
00:01:18,220 --> 00:01:22,170
when we have this file
 we can go to the debugging panel and

24
00:01:22,170 --> 00:01:26,250
from this list
 we can select a debugging configuration.

25
00:01:26,940 --> 00:01:30,880
Some of these configurations
 are useful for more complex applications.

26
00:01:30,890 --> 00:01:34,480
For example we use
 Python: Django to debug a

27
00:01:34,480 --> 00:01:37,890
Web application built with python. For this course

28
00:01:37,890 --> 00:01:41,700
we're going to use
 Python: current file with Integrated

29
00:01:41,700 --> 00:01:44,980
Terminal. So select this. Now

30
00:01:44,980 --> 00:01:48,450
to start debugging first we need
 to add a break point on

31
00:01:48,450 --> 00:01:52,330
one of these statements. So I'm
 gonna put the cursor on line 8

32
00:01:52,340 --> 00:01:56,340
and insert a breakpoint by pressing F9.

33
00:01:56,350 --> 00:01:59,670
So this is a break point.
 We can press f9 one more

34
00:01:59,670 --> 00:02:03,360
time to remove it. If you're
 on a Mac keyboard you should press

35
00:02:03,370 --> 00:02:07,100
the function key which is on the
 bottom left corner of your keyboard and

36
00:02:07,100 --> 00:02:10,840
then press F9.
 So here we have a break point.

37
00:02:10,850 --> 00:02:14,750
Now we can press F5 to run the application

38
00:02:14,760 --> 00:02:20,060
up to this point. so f5. so

39
00:02:20,060 --> 00:02:23,640
this automatically opens the integrated terminal here. Don't

40
00:02:23,640 --> 00:02:26,910
worry about this. I'm going
 to close it. so you

41
00:02:26,910 --> 00:02:30,270
can see our program is running
 up to this point. This line is

42
00:02:30,270 --> 00:02:33,890
highlighted. Now we can execute this program line

43
00:02:33,890 --> 00:02:38,330
by line and see exactly
 what happens at granting. So

44
00:02:38,360 --> 00:02:42,050
to execute one statement at
 the time Press F10

45
00:02:43,640 --> 00:02:47,790
Okay. we're done.
 Now we're on line 9. However on line

46
00:02:47,790 --> 00:02:51,170
9 we're calling the multiply Function if

47
00:02:51,170 --> 00:02:55,250
you press F10 again
 the execution stops so

48
00:02:55,250 --> 00:02:58,660
we couldn't figure out why we
 got one as a result of

49
00:02:58,660 --> 00:03:02,170
multiplying these numbers. So let's start debugging

50
00:03:02,170 --> 00:03:05,790
one more time. We press F5 so

51
00:03:05,790 --> 00:03:09,460
once again we are on line 8.
 Let's step over this line

52
00:03:09,470 --> 00:03:12,600
with F10.
 At this time we want to

53
00:03:12,600 --> 00:03:16,210
step into this multiply function
 so we see exactly what

54
00:03:16,210 --> 00:03:20,170
is going on here.
 So instead of F10 press F

55
00:03:20,180 --> 00:03:23,960
11 now we are on line 2.

56
00:03:24,440 --> 00:03:27,720
So if you're calling a function
 that you have defind you can

57
00:03:27,720 --> 00:03:30,990
step into that function using F11. Now

58
00:03:30,990 --> 00:03:34,640
here we are in the
 multiply function. On the left side, inside

59
00:03:34,640 --> 00:03:38,260
the variables panel, you can see
 all the variables that are meaningful in

60
00:03:38,260 --> 00:03:42,590
this function. So under locals.
 we have numbers. So

61
00:03:42,590 --> 00:03:46,240
this is our numbers argument.
 You can see this is set to

62
00:03:46,240 --> 00:03:50,290
topple with three numbers 1 2 3. Right now

63
00:03:50,290 --> 00:03:54,460
our total variable is not in
 this list because it's not defined yet.

64
00:03:54,940 --> 00:03:58,960
The moment we step over
 this line with F10 total

65
00:03:58,970 --> 00:04:03,310
comes to existence and you can
 see initially is set to one. Now

66
00:04:03,310 --> 00:04:06,670
we are at the beginning of
 our for loop. Let's press F

67
00:04:06,670 --> 00:04:10,440
10 one more time. Here we are.

68
00:04:10,450 --> 00:04:13,790
We're going to multiply
 total by number. So let's step

69
00:04:13,790 --> 00:04:17,080
over this line as well.
 Now at this point we

70
00:04:17,080 --> 00:04:20,670
have a new variable called number that

71
00:04:20,670 --> 00:04:24,770
is our loop variable initially
 is set to one. Now

72
00:04:24,770 --> 00:04:28,870
here we are on line 5.
 If you press F10 we

73
00:04:28,870 --> 00:04:32,380
can see we jump out of this function.
 So our loop did

74
00:04:32,380 --> 00:04:35,900
not execute to completion.
 And that is the reason

75
00:04:35,900 --> 00:04:39,660
our program has a bug.
 So to fix this I'm

76
00:04:39,660 --> 00:04:45,850
going to stop the debgger
 with shift and F5 now

77
00:04:45,860 --> 00:04:49,450
back here. Let's remove the indentation. save

78
00:04:49,450 --> 00:04:53,300
the changes. run the program
 in debug mode one more time

79
00:04:53,310 --> 00:04:57,320
. So we press F five. Here

80
00:04:57,320 --> 00:05:00,920
we are. Let's step over
 this with F 10 now. Step

81
00:05:00,920 --> 00:05:04,250
into this with F11 and step over these

82
00:05:04,250 --> 00:05:07,610
lines with F10 a
 few more times. So

83
00:05:07,610 --> 00:05:11,300
F10 one more time. Totally set.

84
00:05:11,310 --> 00:05:14,720
Now we are in the second iteration.
 Let's press F 10

85
00:05:14,720 --> 00:05:18,170
1 more time. In this situation.
 you can see number is

86
00:05:18,170 --> 00:05:21,900
set to to our total
 is still one. So let's

87
00:05:21,900 --> 00:05:25,480
step over this line as well.
 Now Total is

88
00:05:25,480 --> 00:05:28,750
updated to two. Here we
 are at the beginning of

89
00:05:28,750 --> 00:05:32,560
the third iteration.
 Let's step over this line in

90
00:05:32,560 --> 00:05:35,950
this situation number is three. So after

91
00:05:35,950 --> 00:05:39,550
we execute this line
 because $12 currently to when

92
00:05:39,550 --> 00:05:43,220
we multiplied by three
 will get six So f

93
00:05:43,220 --> 00:05:46,990
10 1 more time.
 Now. we only have three

94
00:05:46,990 --> 00:05:51,010
iterations in this loop. So if you
 press f 10 1 more time. our

95
00:05:51,010 --> 00:05:54,290
loop complete. Now we are
 ready to return Total. which is

96
00:05:54,290 --> 00:05:58,230
currently six. So f 10 were

97
00:05:58,230 --> 00:06:01,930
online nine and we're done now

98
00:06:01,930 --> 00:06:05,450
. One more tip in this demo.
 I put the break point on

99
00:06:05,450 --> 00:06:09,090
the first line of the program.
 You don't always have to do this. For

100
00:06:09,090 --> 00:06:12,940
example here we know that our
 multiply function has a bug so

101
00:06:12,940 --> 00:06:16,320
instead of putting the
 breakpoint on line 8 so we

102
00:06:16,320 --> 00:06:19,580
could put it on line 2. So when

103
00:06:19,580 --> 00:06:24,130
we start the program in
 debug mode with F5 We

104
00:06:24,130 --> 00:06:27,900
immediately start in the multiply function. And

105
00:06:27,900 --> 00:06:31,130
one more tip before we finish this lecture,
 If you step into

106
00:06:31,130 --> 00:06:34,650
a function and you know
 that that function works properly you

107
00:06:34,650 --> 00:06:38,310
can immediately step out of
 that function with Shift and

108
00:06:38,310 --> 00:06:41,740
F11. so you
 don't have to execute the

109
00:06:41,740 --> 00:06:45,640
entire function line by line.
 You can press shift and F11 to step out of the function


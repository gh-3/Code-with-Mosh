2
00:00:03,500 --> 00:00:08,040
In programming we have a common data structure called Stack
 which resembles a

3
00:00:08,040 --> 00:00:11,390
stack of items in the real world.
 Imagine you have a stack

4
00:00:11,390 --> 00:00:14,580
of books. The last book
 that you put on top of

5
00:00:14,580 --> 00:00:18,020
this tag is the first book
 that you can remove. You refer

6
00:00:18,020 --> 00:00:21,870
to this behavior as life Oh.
 which is short for last in

7
00:00:21,990 --> 00:00:25,620
first out. So this
 is a stack data structure

8
00:00:25,630 --> 00:00:29,000
. and it's very common
 in real world applications. A good

9
00:00:29,000 --> 00:00:32,090
example of that is your browser.
 Whenever you navigate to a

10
00:00:32,090 --> 00:00:35,780
new website. your browser keeps
 your browsing session in a stack

11
00:00:35,790 --> 00:00:39,350
. So when you click the back button.
 it takes you to the previous website

12
00:00:39,740 --> 00:00:43,810
. Let me show you how it works.
 so we start with an empty stack. Now

13
00:00:43,810 --> 00:00:47,600
let's say we navigate the website
 number one now here for simplicity. I'm

14
00:00:47,600 --> 00:00:51,080
using a number. If you're
 building a browser instead of

15
00:00:51,090 --> 00:00:54,400
a number. will use a string.
 which is the address of the

16
00:00:54,400 --> 00:00:57,610
current website. Now let's say we navigate to

17
00:00:57,610 --> 00:01:01,460
a couple more websites and
 then click the back button. At

18
00:01:01,460 --> 00:01:04,640
this point. the browser removes
 the item on top of

19
00:01:04,640 --> 00:01:08,000
the stack. and then
 it will redirect us to

20
00:01:08,000 --> 00:01:11,390
the previous website. Now let's
 say we press the back

21
00:01:11,390 --> 00:01:14,510
button a couple more times.
 so we'll end up with an

22
00:01:14,520 --> 00:01:18,090
empty stack. At this point.
 the browser will disable the

23
00:01:18,090 --> 00:01:21,800
back button. This is how
 a stack works, Last In

24
00:01:21,920 --> 00:01:25,300
First Out. 
Now let me show you how to use a

25
00:01:25,300 --> 00:01:29,150
stack in python. 
Basically we can use a list object as

26
00:01:29,150 --> 00:01:33,270
a stack. So here I'm going
 to define a variable like browsing

27
00:01:33,360 --> 00:01:36,820
session and set it
 to an empty list. Now

28
00:01:36,820 --> 00:01:40,400
let's say the user navigates
 the website number one. so we

29
00:01:40,400 --> 00:01:44,680
call browsing session that a panned method and

30
00:01:44,690 --> 00:01:48,160
add the address of the current website. Now

31
00:01:48,160 --> 00:01:51,920
let's say the user navigates
 to website number two and

32
00:01:51,920 --> 00:01:55,120
then three. Let's have a look at what

33
00:01:55,120 --> 00:01:58,440
we have in our stack.
 So we printed. And

34
00:01:58,440 --> 00:02:01,780
as you see. we have a
 list of three items. Now when

35
00:02:01,780 --> 00:02:05,510
the user presses the back button.
 we should remove the last item

36
00:02:05,510 --> 00:02:08,730
in this list. right.
 How do we do it. We use

37
00:02:08,730 --> 00:02:12,260
the pop method. so we call browsing session

38
00:02:12,260 --> 00:02:15,410
dot pop. This will remove
 the last item from the

39
00:02:15,410 --> 00:02:18,970
stack and return it so
 we can get it here. But

40
00:02:18,970 --> 00:02:22,990
in this case. we're not going to
 use this value. Let me just printed on

41
00:02:22,990 --> 00:02:26,240
the terminal so you can see

42
00:02:26,240 --> 00:02:30,310
that so three is removed from the stack.
 Now. if we print our

43
00:02:30,310 --> 00:02:35,210
stack one more time Prince browsing session. you

44
00:02:35,210 --> 00:02:38,590
can see three is removed and
 we have only two items in

45
00:02:38,590 --> 00:02:42,440
our stack. So we need to take
 the user to the previous website which

46
00:02:42,440 --> 00:02:45,980
is the item on top of the stack.
 And we can get that using

47
00:02:45,990 --> 00:02:49,460
a negative one index. Very easy. So back

48
00:02:49,460 --> 00:02:53,370
here. browsing session of negative one

49
00:02:53,380 --> 00:02:57,350
. This returns the last item.
 So we printed

50
00:02:58,040 --> 00:03:03,450
. And I would like to
 add just a label for clarity. Redirect

51
00:03:04,940 --> 00:03:08,350
. Let's look at the result.
 So when the user presses

52
00:03:08,350 --> 00:03:11,780
the back button. we redirect
 them to the previous website which

53
00:03:11,780 --> 00:03:15,330
is website number two.
 Now here. we need to check if

54
00:03:15,330 --> 00:03:18,830
the stack is empty or not.
 If it becomes empty. we

55
00:03:18,830 --> 00:03:22,190
need to disable the back button.
 So that is

56
00:03:22,190 --> 00:03:25,950
very easy. Earlier in the course.
 I told you about the false values

57
00:03:26,340 --> 00:03:29,890
. So number zero and
 empty string an empty list

58
00:03:29,980 --> 00:03:33,300
. These are all false e values.
 So if you apply. the

59
00:03:33,300 --> 00:03:36,820
not operator to an
 empty list will get the

60
00:03:36,820 --> 00:03:40,040
bully and true. So to
 see if our stack is

61
00:03:40,050 --> 00:03:43,770
empty. we can simply
 read code like this. if

62
00:03:43,780 --> 00:03:47,190
not browsing session. then at this point

63
00:03:47,190 --> 00:03:50,550
we will disable the back button. So

64
00:03:50,550 --> 00:03:53,790
let me recap. We use the
 append method to add an item on

65
00:03:53,790 --> 00:03:57,040
top of the stack. We use Pop to

66
00:03:57,040 --> 00:04:00,840
remove the item on top of the stack.
 We use index negative

67
00:04:00,840 --> 00:04:04,310
one to get the item on
 top of the stack. And of

68
00:04:04,310 --> 00:04:07,620
course. before doing that. we need to check
 to see if our stack is empty or

69
00:04:07,620 --> 00:04:11,130
not. Because if it's empty
 when we run. this code

70
00:04:11,140 --> 00:04:15,070
will get an error. So if not browsing

71
00:04:15,070 --> 00:04:18,440
session. then we'll get the item on top


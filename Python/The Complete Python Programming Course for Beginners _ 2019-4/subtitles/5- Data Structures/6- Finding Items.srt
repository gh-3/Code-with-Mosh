2
00:00:04,230 --> 00:00:07,640
There are times that you want to find
 the index of a given object in

3
00:00:07,640 --> 00:00:11,110
a list. So let's say we
 want to find the index of

4
00:00:11,110 --> 00:00:14,660
Letter a in our letters list.
 We call letters

5
00:00:14,670 --> 00:00:18,380
that index and pass a Let's

6
00:00:18,380 --> 00:00:22,260
print the result. so this will return

7
00:00:22,270 --> 00:00:25,590
. Zero. What if you
 try to get the index of

8
00:00:25,590 --> 00:00:29,690
an object that doesn't
 exist here like d. we

9
00:00:29,690 --> 00:00:33,600
get a value error.
 D is not in the list. This

10
00:00:33,600 --> 00:00:37,060
behavior is different from a
 lot of programming languages out there.

11
00:00:37,440 --> 00:00:40,740
C based languages return
 negative one if you try to

12
00:00:40,740 --> 00:00:44,460
get the index of an object
 that doesn't exist in the list. But

13
00:00:44,460 --> 00:00:47,960
in Python we get an error.
 So to prevent this

14
00:00:48,030 --> 00:00:52,210
from happening, first you should check to
 see if the given object exists

15
00:00:52,220 --> 00:00:55,790
in the list. And for that
 we use the in operator. So

16
00:00:55,800 --> 00:00:59,970
if d is in letters. then

17
00:00:59,970 --> 00:01:03,770
we will print its index. So now

18
00:01:03,770 --> 00:01:07,080
we run the program and we
 don't get any errors. We also

19
00:01:07,080 --> 00:01:11,250
have another method that you might
 find useful in certain situations. and

20
00:01:11,250 --> 00:01:15,330
that is count. So letters that count this

21
00:01:15,330 --> 00:01:18,970
will return the number of
 occurrences of the given item in

22
00:01:18,970 --> 00:01:23,120
this list. So when
 we print the result. we'll

23
00:01:23,120 --> 00:01:26,750
get zero. Next. we're going
 to look at sorting lists.


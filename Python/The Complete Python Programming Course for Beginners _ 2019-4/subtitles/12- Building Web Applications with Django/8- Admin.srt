2
00:00:04,290 --> 00:00:07,650
All right.
Our database is in a good shape.
Now the next step is to allow

3
00:00:07,650 --> 00:00:10,970
the staff at our imaginary video rental store to

4
00:00:10,970 --> 00:00:14,910
populate the list of movies.
So we need to create an administration

5
00:00:14,910 --> 00:00:18,110
panel for them. 
However when using Django,
we don't have to do

6
00:00:18,110 --> 00:00:22,790
this manually. 
So all Django applications come with a powerful administration

7
00:00:22,790 --> 00:00:26,060
interface. 
Let me show you.
So first let's open up

8
00:00:26,060 --> 00:00:29,440
the terminal and run our development server. 
So

9
00:00:29,440 --> 00:00:33,360
python. manage that pie run server.

10
00:00:34,540 --> 00:00:37,870
Okay. 
Now back to the browser. 
Let's

11
00:00:37,870 --> 00:00:41,500
head over to slash admin. 
Look. 
This

12
00:00:41,500 --> 00:00:45,260
is the entrance to our administration panel.
So by default we

13
00:00:45,260 --> 00:00:49,230
get this log in screen. 
This is coming from the auth app that is installed by

14
00:00:49,230 --> 00:00:52,430
default. 
Earlier we talked about this settings dot

15
00:00:52,430 --> 00:00:55,730
py. 
You saw the list of installed applications. 
The

16
00:00:55,730 --> 00:00:59,170
second app here is the auth app.
So this is the app that

17
00:00:59,170 --> 00:01:02,600
knows all about authenticating users.
 And this logging screen

18
00:01:02,600 --> 00:01:05,920
is implemented inside of that app.
So as you can see

19
00:01:05,930 --> 00:01:09,140
that app is a small, reusable 
package that we

20
00:01:09,140 --> 00:01:12,860
are using in this project.
By the same token, we can create small,

21
00:01:12,870 --> 00:01:16,670
reusable apps that other people
can use in their projects. 
Now

22
00:01:16,670 --> 00:01:20,260
back to our login screen. 
Currently we don't have any users in our database

23
00:01:20,270 --> 00:01:24,320
So the next step is to create a super user. 
Back

24
00:01:24,320 --> 00:01:27,660
in the VSCode. 
I'm going to open a new terminal window, 
so we don't have

25
00:01:27,660 --> 00:01:31,000
to stop our server and restart it.
 So let's click

26
00:01:31,000 --> 00:01:34,920
this. 
Now Let's run python manage dot

27
00:01:34,920 --> 00:01:40,010
py createsuperuser. 
Let's

28
00:01:40,020 --> 00:01:43,260
enter a user name,
I'm gonna use admin. 
with this

29
00:01:43,260 --> 00:01:47,560
email address and 
finally a password. 
Now

30
00:01:47,560 --> 00:01:51,330
if we use a weak
 password like 1234 and one more time,

31
00:01:51,340 --> 00:01:55,360
this is going to complain, telling us
the password is too short or too common whatever.

32
00:01:55,840 --> 00:01:59,420
So here we can bypass the validation and go ahead or

33
00:01:59,430 --> 00:02:02,760
create a stronger password. 
What is demo, I'm going to go with

34
00:02:02,760 --> 00:02:06,870
1234. 
So yes.
Okay.

35
00:02:06,880 --> 00:02:10,340
Super user created successfully. Beautiful. 
Now back

36
00:02:10,340 --> 00:02:14,560
to our log in screen.
Let's log in with admin and 1234.

37
00:02:16,240 --> 00:02:19,440
Okay. 
So here's our administration panel. 
We

38
00:02:19,440 --> 00:02:22,900
can manage the list of groups and users. 
So we can put users

39
00:02:22,900 --> 00:02:26,600
in different groups like admins, moderators, guests and

40
00:02:26,600 --> 00:02:30,420
so on. 
So let's go to the list of users. 
Here

41
00:02:30,420 --> 00:02:33,580
we get this beautiful table that
 shows all the users in our

42
00:02:33,580 --> 00:02:36,840
database. 
We can sort this list by various columns. 
We

43
00:02:36,840 --> 00:02:40,440
can filter them. 
We can search for users and so on. 
Now

44
00:02:41,340 --> 00:02:44,540
back to the main page.
Currently we can only manage the

45
00:02:44,540 --> 00:02:48,260
users and groups. 
We cannot manage our custom models like genres

46
00:02:48,380 --> 00:02:51,610
and movies. 
But we can easily bring them here 
with only a single line

47
00:02:51,610 --> 00:02:54,990
of code. 
Let me show you.
Back in our movies app. 
Here

48
00:02:54,990 --> 00:02:58,690
we have this admin file and this
is where we register the models that

49
00:02:58,690 --> 00:03:02,120
we want to manage using our administrative interface. 
So

50
00:03:02,120 --> 00:03:05,340
let's open this file. Alright. 
Here we

51
00:03:05,340 --> 00:03:10,060
need to import our genre and movie classes. 
So from

52
00:03:10,540 --> 00:03:13,850
the models module in the current folder. 
Remember this

53
00:03:13,850 --> 00:03:17,140
period indicates the current folder, we

54
00:03:17,140 --> 00:03:21,050
need to import the genre and movie classes.

55
00:03:22,240 --> 00:03:25,800
Now Finally we're gonna
 say admin that site that

56
00:03:25,800 --> 00:03:29,070
register genre and

57
00:03:29,070 --> 00:03:32,350
let's duplicate this line and register the movie

58
00:03:32,350 --> 00:03:35,860
class. 
So with these two lines we're telling Django to

59
00:03:35,860 --> 00:03:39,750
register these models in the administration interface. 
So

60
00:03:40,140 --> 00:03:43,820
let's save the changes. 
Back in the admin. 
Let's refresh

61
00:03:43,820 --> 00:03:46,970
the page. 
Now we have these two models in our

62
00:03:46,970 --> 00:03:51,130
movies app. 
So let's go to the list of genres. 
In

63
00:03:51,130 --> 00:03:54,780
this list we have one genre 
that is genre object one.

64
00:03:54,790 --> 00:03:58,010
What is that? 
Well before recording this video, 
I created a

65
00:03:58,010 --> 00:04:01,170
genre record in the database. 
So here

66
00:04:01,170 --> 00:04:04,490
you can see that in our genre table 
currently we have one record with

67
00:04:04,490 --> 00:04:08,040
id 1 and name Action.
I created this just

68
00:04:08,050 --> 00:04:11,260
before recording this video.
So this 1 that you see

69
00:04:11,260 --> 00:04:14,680
here is the id of a genre record. 
Now this table

70
00:04:14,680 --> 00:04:18,640
is not very user friendly. 
It would be better if you had two columns,

71
00:04:18,640 --> 00:04:22,060
id and name, and we could see
the name of each genre right here.

72
00:04:22,540 --> 00:04:26,950
So in the next lecture I'm going to show you 
how to customize this administration interface.


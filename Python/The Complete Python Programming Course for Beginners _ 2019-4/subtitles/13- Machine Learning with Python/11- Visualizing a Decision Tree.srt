1
00:00:04,240 --> 00:00:07,620
Earlier in this section I told you that 
decision trees are the easiest to

2
00:00:07,620 --> 00:00:11,430
understand and 
that's why we started machine learning with decision trees.

3
00:00:11,530 --> 00:00:15,050
In this section we're going to export
our model in a visual format. 
So

4
00:00:15,050 --> 00:00:18,460
you will see how this model makes predictions. 
That

5
00:00:18,460 --> 00:00:22,000
is really really cool.
Let me show you. 
So once

6
00:00:22,000 --> 00:00:25,610
again I've simplified this code.
So we simply import our

7
00:00:25,610 --> 00:00:29,360
data set, 
create input and output sets,

8
00:00:29,840 --> 00:00:33,190
create a model and 
train it. 
That's

9
00:00:33,200 --> 00:00:36,770
all we are doing. 
Now I want you to follow along with me, type

10
00:00:36,780 --> 00:00:40,390
everything exactly as I show you in this lecture. 
Don't worry about what

11
00:00:40,390 --> 00:00:43,700
everything means. 
We're going to come back to it shortly. 
So on the

12
00:00:43,700 --> 00:00:48,260
top from sklearn import tree.

13
00:00:49,340 --> 00:00:52,920
This object has a method 
for exporting our decision tree in

14
00:00:52,920 --> 00:00:56,450
a graphical format.
So after we train our model

15
00:00:56,940 --> 00:01:00,760
let's call tree dot export underline

16
00:01:00,890 --> 00:01:04,200
graphviz. 
Here are a few arguments we need

17
00:01:04,200 --> 00:01:07,830
it to pass. 
The first argument is our model. 
The

18
00:01:07,830 --> 00:01:11,440
second is the name of the output file.
 So here we're going to use keyword

19
00:01:11,440 --> 00:01:14,620
arguments because this method takes so
 many parameters and we want to

20
00:01:14,620 --> 00:01:18,010
selectively pass keyword arguments without worrying about

21
00:01:18,010 --> 00:01:21,190
their order. 
So the parameter we're going

22
00:01:21,190 --> 00:01:24,530
to set is out_file. 
Let's set

23
00:01:24,530 --> 00:01:28,320
this to music-recommender

24
00:01:28,380 --> 00:01:32,310
dot dot.
This is the dot format which

25
00:01:32,310 --> 00:01:36,050
is a graph description language.
You'll see that shortly. 
Now

26
00:01:36,050 --> 00:01:39,890
the other parameter we wanna set
is feature underline

27
00:01:39,890 --> 00:01:43,490
names. 
We set this to an array of two strings,

28
00:01:43,940 --> 00:01:47,060
age and gender. 
These are the

29
00:01:47,060 --> 00:01:50,410
features or the columns of our data set. 
So

30
00:01:50,410 --> 00:01:54,320
they are the properties or features of our data. Okay? 
The

31
00:01:54,330 --> 00:01:58,320
other parameter is class names. 
So class underline

32
00:01:58,320 --> 00:02:02,320
names. 
We should set this to the list of classes or

33
00:02:02,330 --> 00:02:06,000
labels we have in our output dataset like hip hop,

34
00:02:06,010 --> 00:02:09,470
jazz, classical and so on.
So this y

35
00:02:09,470 --> 00:02:13,060
data set includes all the genres or all the classes of

36
00:02:13,060 --> 00:02:16,860
our data but they are repeated a
 few times in this data set. So

37
00:02:17,440 --> 00:02:21,170
here we call y.unique. 
This returns

38
00:02:21,280 --> 00:02:25,460
the unique list of classes.
 Now we should sort this alphabetically. 
 So

39
00:02:25,460 --> 00:02:28,880
we call this sorted function and 
pass the

40
00:02:28,880 --> 00:02:33,240
result of y.unique. 
The

41
00:02:33,240 --> 00:02:36,570
next parameter is label. 
We set

42
00:02:36,570 --> 00:02:39,740
this to a String all. 
Once again Don't worry

43
00:02:39,740 --> 00:02:43,850
about the details of these parameters, 
we're going to come back to this shortly. 
So

44
00:02:43,980 --> 00:02:47,890
set label to all. 
Then rounded to

45
00:02:47,890 --> 00:02:52,980
True. 
And finally filled to True. 
So

46
00:02:52,980 --> 00:02:56,550
this is the end result. 
Now let's run this cell using control and

47
00:02:56,550 --> 00:02:59,880
enter. 
Okay. Here

48
00:02:59,880 --> 00:03:03,760
we have a new file music-recommender.dot.

49
00:03:03,770 --> 00:03:07,210
That's a little bit funny.
So we want to open this file with

50
00:03:07,210 --> 00:03:10,960
VSCode. 
So drag and drop this
into a VSCode window

51
00:03:14,240 --> 00:03:17,970
Okay. 
Here's a dot format.
It's a textual language for

52
00:03:17,970 --> 00:03:21,600
describing graphs. 
Now to visualize this graph we

53
00:03:21,600 --> 00:03:25,110
need to install an extension in VSCode.
So on the left side

54
00:03:25,120 --> 00:03:28,940
click the extensions panel and 
search for dot

55
00:03:28,950 --> 00:03:32,530
d o t.
Look at the second extension here.

56
00:03:32,560 --> 00:03:35,740
Graphviz or dot language by

57
00:03:35,740 --> 00:03:39,120
Stephanvs.
Go ahead and install this

58
00:03:39,120 --> 00:03:42,660
extension and 
then reload VSCode.
Once you do that, you

59
00:03:42,660 --> 00:03:46,360
can visualize this dot file.
So let me close this tab.

60
00:03:47,540 --> 00:03:51,290
All right. 
Look at this dot dot dot here on the right side, 
click

61
00:03:51,290 --> 00:03:55,400
this. 
You should have a new menu "Open Preview to the Side", 
so click

62
00:03:55,400 --> 00:03:59,270
that. 
All right here's the visualization of

63
00:03:59,270 --> 00:04:03,100
our decision Tree.
Let's close the dot file. 
There

64
00:04:03,100 --> 00:04:07,220
you go. 
This is exactly how our model makes predictions. 
So

65
00:04:07,220 --> 00:04:10,540
we have this binary tree 
which means every node can have a

66
00:04:10,540 --> 00:04:13,780
maximum of two children. 
On top of each node we

67
00:04:13,780 --> 00:04:17,010
have a condition.
If this condition is true, we

68
00:04:17,010 --> 00:04:20,360
go to the child node on the left side, 
Otherwise we go to the child

69
00:04:20,360 --> 00:04:23,860
node on the right side.
So let's see what's happening here. 
The

70
00:04:23,860 --> 00:04:27,120
first condition is 
age less than or equal to

71
00:04:27,120 --> 00:04:30,570
30.5. 
If this condition is false, that means

72
00:04:30,580 --> 00:04:33,960
that user is 30 years or older.
So the genre of the music

73
00:04:33,960 --> 00:04:37,150
that they're interested in is classical. 
So here

74
00:04:37,150 --> 00:04:41,100
we're classifying people based on their profile. 
That

75
00:04:41,100 --> 00:04:44,550
is the reason we have the world class here. 
So a user who

76
00:04:44,550 --> 00:04:48,970
is 30 years or older belongs
 to the class of classical or

77
00:04:48,970 --> 00:04:52,950
people who like classical music.
Now what if this condition is

78
00:04:52,950 --> 00:04:57,230
true? 
That means that user is younger than 30. 
So

79
00:04:57,240 --> 00:05:01,560
now we check the gender.
If it's less than 0.5 which

80
00:05:01,560 --> 00:05:04,730
basically means if it equals
 to zero then we're dealing with

81
00:05:04,730 --> 00:05:08,110
a female. 
So we go to the child node here. 
Now once

82
00:05:08,110 --> 00:05:11,680
again we have another condition.
So we're dealing with a female who

83
00:05:11,680 --> 00:05:15,470
is younger than 30. 
Once again we need to check their age. 
So

84
00:05:15,480 --> 00:05:19,090
is the age less than 25.5? 
If

85
00:05:19,090 --> 00:05:23,080
that's the case then that user likes dance music, 
Otherwise

86
00:05:23,090 --> 00:05:26,760
they like acoustic music.
So this is the decision tree

87
00:05:26,760 --> 00:05:30,390
that our model uses to make predictions.
Now if you're wondering

88
00:05:30,390 --> 00:05:34,620
why we have this floating point numbers like 25.5? 
These

89
00:05:34,620 --> 00:05:38,310
are basically the rules that our
 model generates based on the patterns

90
00:05:38,310 --> 00:05:42,220
that it finds in our data set.
As we give our model more data, 

91
00:05:42,240 --> 00:05:45,910
these rules will change.
So they are not always the same. 
Also

92
00:05:45,920 --> 00:05:49,180
the more columns or more features we have, 
our decision tree

93
00:05:49,180 --> 00:05:53,110
is going to get more complex.
Currently we have only two features age

94
00:05:53,120 --> 00:05:56,630
and gender. 
Now back to our code.
Let me quickly explain

95
00:05:56,630 --> 00:05:59,850
the meaning of all these parameters.
We set filled to True, 
so

96
00:05:59,860 --> 00:06:03,090
each box or each node is filled with a color. 
We

97
00:06:03,090 --> 00:06:07,570
set rounded to True, 
so they have rounded corners. 
We

98
00:06:07,570 --> 00:06:10,810
set label to all, 
so every node has labels that

99
00:06:10,810 --> 00:06:14,350
we can read. 
We set class names to the unique list

100
00:06:14,350 --> 00:06:17,770
of genres and 
that's where displaying the class for each node right

101
00:06:17,770 --> 00:06:26,000
here. 
And we set feature names to age and gender, 
so we can see the rules in our nodes.


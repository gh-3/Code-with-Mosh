2
00:00:04,440 --> 00:00:07,610
So in the last lecture we
 defined two attributes for our

3
00:00:07,610 --> 00:00:12,050
point objects in the constructor of the point class. 
So

4
00:00:12,050 --> 00:00:15,390
now whenever we create a new point object, 
this point

5
00:00:15,390 --> 00:00:18,690
object will have these attributes by default. 
We can 

6
00:00:18,700 --> 00:00:22,040
also define an attribute
 after we create a point

7
00:00:22,040 --> 00:00:25,610
object. 
So here we can
 set point dot z to

8
00:00:25,610 --> 00:00:29,150
10, because 
objects in python are dynamic, similar

9
00:00:29,150 --> 00:00:33,110
to javascript, 
So we don't have to define all the attributes in

10
00:00:33,110 --> 00:00:37,000
a constructor, 
We can define them later whenever we need. 
Now

11
00:00:37,000 --> 00:00:40,540
here's what is important for you to understand: 
all these attributes we 

12
00:00:40,540 --> 00:00:44,410
have defined so far x, y and Z, 
these

13
00:00:44,410 --> 00:00:47,880
are instance attributes. 
In other words

14
00:00:47,990 --> 00:00:52,130
these are attributes that
 belong to point instances or

15
00:00:52,230 --> 00:00:55,920
point objects. 
So every point object can have different

16
00:00:55,920 --> 00:00:59,540
values for these attributes.
 Here is an example. We

17
00:00:59,540 --> 00:01:03,000
have one point object with these values. We

18
00:01:03,000 --> 00:01:06,450
can create another point. object with

19
00:01:06,450 --> 00:01:10,600
different set of values and then draw

20
00:01:10,600 --> 00:01:14,140
that una terminal. Let me run this. You

21
00:01:14,140 --> 00:01:18,890
can see we have two point
 objects and these are completely independent

22
00:01:18,900 --> 00:01:22,920
of each other.
Each point has its own attributes

23
00:01:23,010 --> 00:01:26,690
just like John and Mary
can have different eye collars. 
So

24
00:01:26,690 --> 00:01:30,160
these are instance attributes. 
But we can also 

25
00:01:30,160 --> 00:01:33,630
define class attributes and 
these are attributes that 

26
00:01:33,630 --> 00:01:38,020
we define at the class level and 
they are the same across

27
00:01:38,030 --> 00:01:41,670
all instances of a class. 
As a metaphor

28
00:01:41,680 --> 00:01:45,280
we can say all humans have 
two eyes and two ears. 
So

29
00:01:45,280 --> 00:01:48,670
these are the attributes that we
define at the class level and

30
00:01:48,670 --> 00:01:53,290
they are shared by all instances. 
So after

31
00:01:53,290 --> 00:01:57,290
a point example here we can define a

32
00:01:57,290 --> 00:02:00,710
class level attribute in the
 body of this class like

33
00:02:00,710 --> 00:02:04,410
this default_collar. 
Now

34
00:02:04,410 --> 00:02:08,330
for simplicity, I'm using a string here
 because we don't want to worry about using

35
00:02:08,330 --> 00:02:11,600
color objects. That's a different story.
So now we

36
00:02:11,600 --> 00:02:15,140
have a class level attribute.
 and we can read this via

37
00:02:15,140 --> 00:02:18,290
a class reference or an object reference.
 Let me show you what

38
00:02:18,290 --> 00:02:21,950
I mean. 
So here online 12
we have a point object.

39
00:02:24,440 --> 00:02:28,240
We can use this object reference 
to get access to

40
00:02:28,240 --> 00:02:32,490
the default_color attribute and then print it. 
But

41
00:02:32,490 --> 00:02:35,690
we can also use the Point class to

42
00:02:35,690 --> 00:02:39,180
get access to this attribute.
 Let's print both of

43
00:02:39,180 --> 00:02:42,650
them and 
run our program. 
so we

44
00:02:42,650 --> 00:02:45,800
get red and red. 
As I told you

45
00:02:45,800 --> 00:02:49,880
before. class attributes are shared across

46
00:02:49,890 --> 00:02:53,480
all instances of a class. So here before

47
00:02:53,480 --> 00:02:57,720
we printed the fault collar.
 If I change. point

48
00:02:57,730 --> 00:03:01,650
that default color to. let's say yellow. note

49
00:03:01,650 --> 00:03:04,850
that here online 11.
 I'm using a class reference. so

50
00:03:04,850 --> 00:03:08,560
I'm not working with any point objects.
 I'm working with the point class

51
00:03:09,240 --> 00:03:12,510
now. When we run this program.
 you can see that

52
00:03:12,510 --> 00:03:15,870
the default color of this point object it's

53
00:03:15,870 --> 00:03:19,030
changed to yellow. Similarly. here we

54
00:03:19,030 --> 00:03:22,660
have another point object if it print another

55
00:03:22,910 --> 00:03:27,880
default color. The

56
00:03:27,880 --> 00:03:31,940
value of this attribute
 has also changed. So class

57
00:03:31,940 --> 00:03:35,700
level attributes are shared across all instances of

58
00:03:35,700 --> 00:03:39,620
a class. If we change their value.
 the changes visible

59
00:03:39,640 --> 00:03:43,180
to all objects of that type now

60
00:03:43,180 --> 00:03:47,340
. in practical terms.
 you will be using instance attributes

61
00:03:47,450 --> 00:03:50,640
most of the time. But there
 are times that you may want to

62
00:03:50,640 --> 00:03:54,390
define a class level attribute
that is shared across all objects of a given type.


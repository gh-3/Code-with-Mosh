WEBVTT

1
00:00:00.000 --> 00:00:04.000
When we talk about python, we mean two

2
00:00:04.000 --> 00:00:08.000
separate things that are closely related: Python language and

3
00:00:08.000 --> 00:00:12.000
particular implementation. Python as a language is just a specification

4
00:00:12.000 --> 00:00:16.000
that defines a set of rules and grammar for writing

5
00:00:16.000 --> 00:00:20.000
python code. A python implementation is basically

6
00:00:20.000 --> 00:00:24.000
a program that understands those rules and can execute

7
00:00:24.000 --> 00:00:28.500
python code. Earlier in the course we downloaded Python from Python.org

8
00:00:28.500 --> 00:00:33.000
This is the default implementation of Python called CPython.

9
00:00:33.000 --> 00:00:36.500
It's a program written in C, that's why it's called CPython.

10
00:00:36.500 --> 00:00:40.000
So here in terminal, when we run python

11
00:00:40.000 --> 00:00:44.000
we get this CPython, this is the default implementation of Python.

12
00:00:44.000 --> 00:00:48.000
There are a few other implementations out there such as

13
00:00:48.000 --> 00:00:52.000
Jython written in Java, IronPython written in C#,

14
00:00:52.000 --> 00:00:56.000
and PyPy written in a subset of Python itself.

15
00:00:56.000 --> 00:01:00.000
As new features are added to the Python language, they are first supported

16
00:01:00.000 --> 00:01:04.000
by CPython because that's the default implementation, and then they

17
00:01:04.000 --> 00:01:08.000
will gradually come to the other implementations. In theory

18
00:01:08.000 --> 00:01:12.000
if we give some python code to any of these implementations we should get

19
00:01:12.000 --> 00:01:16.000
the same result, but in practice that's not always the case.

20
00:01:16.000 --> 00:01:21.000
Certain features may be available in one implementation but not another,

21
00:01:21.000 --> 00:01:24.000
or they just behave a little bit differently in a particular

22
00:01:24.000 --> 00:01:28.000
implementation. Now you might ask, what is the point of this?

23
00:01:28.000 --> 00:01:32.000
Why do we have several implementations of Python? Wouldn't CPythonn

24
00:01:32.000 --> 00:01:36.000
be enough? Well, it's for the same reason we have multiple operating

25
00:01:36.000 --> 00:01:40.000
systems, Or multiple operating systems, or multiple browsers, or multiple programming languages.

26
00:01:40.000 --> 00:01:44.000
After all these years, programmers haven't agreed on a single

27
00:01:44.000 --> 00:01:48.000
programming language, and that's the same story with Python implementation.

28
00:01:48.000 --> 00:01:52.000
However, there is one technical reason

29
00:01:52.000 --> 00:01:56.000
behind these implementations that you should be aware of. Since Jython

30
00:01:56.000 --> 00:02:00.000
is implemented in Java, it allows you to reuse

31
00:02:00.000 --> 00:02:04.000
some existing Java code in a Python program. So if you're a Java

32
00:02:04.000 --> 00:02:08.000
developer and you want to import some Java code into a Python program,

33
00:02:08.000 --> 00:02:12.000
you should use Jython instead of Cpython.

34
00:02:12.000 --> 00:02:16.000
Similarly IronPython is written in C#, so if you're a C# developer,

35
00:02:16.000 --> 00:02:20.000
and want to bring some C# code into a Python program, you will

36
00:02:20.000 --> 00:02:24.000
have to use IronPython. Next we will look at how exactly

37
00:02:24.000 --> 00:02:28.000
CPython executes Python Code.

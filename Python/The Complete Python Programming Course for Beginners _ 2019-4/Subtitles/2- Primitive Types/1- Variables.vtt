WEBVTT

1
00:00:04.080 --> 00:00:07.840
Let's start this section by a discussion 
of variables which are one of the core

2
00:00:08.040 --> 00:00:13.360
concepts in programing, we use variables 
to store data in computer's memory.

3
00:00:13.560 --> 00:00:14.760
Here are a few examples.

4
00:00:14.920 --> 00:00:16.720
I'm going to define a variable called

5
00:00:16.920 --> 00:00:21.640
students underlying count 
and setting it to a thousand.

6
00:00:21.840 --> 00:00:25.640
When we run this program, 
Python interpreter will allocate some

7
00:00:25.840 --> 00:00:30.240
memory and store this number 
thousand in that memory space.

8
00:00:30.440 --> 00:00:35.480
Then it will have this variable 
reference, that memory location.

9
00:00:35.680 --> 00:00:39.720
So this variable is just like 
a label for that memory location.

10
00:00:39.920 --> 00:00:44.600
We can use this variable or this label 
anywhere in our program to get access 

11
00:00:44.800 --> 00:00:47.600
to that memory location 
and the data stored there. 

12
00:00:47.800 --> 00:00:52.160
So now if we print students count 

13
00:00:52.360 --> 00:00:56.880
and run our program, 
we will get the number thousand. 

14
00:00:57.080 --> 00:00:59.320
So this is the basic of variables. 

15
00:00:59.520 --> 00:01:03.080
Now, what kind of data can we 
store in computer's memory? 

16
00:01:03.280 --> 00:01:06.960
Well, we have several different 
kinds of data in this section. 

17
00:01:07.160 --> 00:01:11.000
We're going to look at the built 
in primitive types in Python. 

18
00:01:11.200 --> 00:01:15.360
Primitive types can be numbers, 
booleans and strings. 

19
00:01:15.560 --> 00:01:18.840
Let me show you. 
So here we have a whole number. 

20
00:01:19.040 --> 00:01:22.160
We refer to this as 
an integer in programing. 

21
00:01:22.360 --> 00:01:24.880
We can also have numbers 
with a decimal point. 

22
00:01:25.080 --> 00:01:26.080
Let's take a look. 

23
00:01:26.280 --> 00:01:29.680
So rating we set this 
to four point nine nine. 

24
00:01:29.880 --> 00:01:33.720
This is what we call a float 
or a floating point number. 

25
00:01:33.920 --> 00:01:36.560
And this terminology is 
not specific to Python. 

26
00:01:36.760 --> 00:01:38.760
In the future, when you learn a new 

27
00:01:38.960 --> 00:01:42.080
programing language, 
you're going to hear these terms again. 

28
00:01:42.280 --> 00:01:43.760
Now, let's take a look at an example 

29
00:01:43.960 --> 00:01:51.880
of a boolean. Is published, 
we set this to true or false? 

30
00:01:52.080 --> 00:01:56.800
These are examples of boolean values 
in programing, so boolean values can 

31
00:01:57.000 --> 00:02:02.120
either be true or false and these are 
exactly like yes and no in English. 

32
00:02:02.320 --> 00:02:04.040
Later in the course you will learn 

33
00:02:04.240 --> 00:02:08.320
that we'll use this boolean values 
to make decisions in our programs. 

34
00:02:08.520 --> 00:02:11.240
For example, if the user is an admin user, 
 z
35
00:02:11.440 --> 00:02:14.520
perhaps we want to give 
them extra permissions. 

36
00:02:14.720 --> 00:02:17.080
So these are the boolean values. now take 

37
00:02:17.280 --> 00:02:22.400
into account that Python is a case 
sensitive language, which means lowercase, 

38
00:02:22.450 --> 00:02:24.800
and uppercase characters 
have different meanings. 

39
00:02:25.000 --> 00:02:30.360
So Boolean values should always start with 
a capital letter like what you see here. 

40
00:02:30.560 --> 00:02:36.880
If we type false or FALSE, these are not 
accepted boolean values in Python. only 

41
00:02:36.940 --> 00:02:39.040
What you see here is 
a valid boolean value. 

42
00:02:39.240 --> 00:02:41.400
So false or true? 

43
00:02:41.600 --> 00:02:44.800
And finally, let's take a look 
at an example of a string. 

44
00:02:45.000 --> 00:02:51.440
So course the name was said this 
to a string like Python programing. 

45
00:02:51.640 --> 00:02:54.680
So a string, as I told 
you before, is like text. 

46
00:02:54.880 --> 00:02:56.400
Whenever you want to work with text 

47
00:02:56.600 --> 00:03:00.200
in your programs, you need 
to surround your text with quotes. 

48
00:03:00.400 --> 00:03:02.320
So these are the basics of variables. 

